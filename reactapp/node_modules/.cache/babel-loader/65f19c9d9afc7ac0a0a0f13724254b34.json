{"ast":null,"code":"var _jsxFileName = \"/Users/lililiardet/Documents/La Capsule/Jour 30 React Hackaton/Projet/Morning News - Part 5/morningnews/reactapp/src/ScreenSource.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { connect } from \"react-redux\";\n\nfunction ScreenSource(props) {\n  const [sourceList, setSourceList] = useState([]);\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang);\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      var langue = \"fr\";\n      var country = \"fr\";\n\n      if (selectedLang == \"en\") {\n        var langue = \"en\";\n        var country = \"us\";\n      }\n\n      props.changeLang(selectedLang);\n      const data = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=9e56b86b7cc84455afbf9841f80f01f0`);\n      const body = await data.json();\n      setSourceList(body.sources);\n    };\n\n    APIResultsLoading();\n  }, [selectedLang]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: \"40px\",\n      margin: \"10px\",\n      cursor: \"pointer\"\n    },\n    src: \"/images/fr.png\",\n    onClick: () => setSelectedLang(\"fr\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: \"40px\",\n      margin: \"10px\",\n      cursor: \"pointer\"\n    },\n    src: \"/images/uk.png\",\n    onClick: () => setSelectedLang(\"en\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: source => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${source.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, source.name),\n      description: source.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedLang: state.selectedLang\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeLang: function (selectedLang) {\n      dispatch({\n        type: \"changeLang\",\n        selectedLang: selectedLang\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenSource);","map":{"version":3,"sources":["/Users/lililiardet/Documents/La Capsule/Jour 30 React Hackaton/Projet/Morning News - Part 5/morningnews/reactapp/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Nav","connect","ScreenSource","props","sourceList","setSourceList","selectedLang","setSelectedLang","APIResultsLoading","langue","country","changeLang","data","fetch","body","json","sources","display","justifyContent","alignItems","width","margin","cursor","source","category","id","name","description","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { connect } from \"react-redux\";\n\nfunction ScreenSource(props) {\n  const [sourceList, setSourceList] = useState([]);\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang);\n\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      var langue = \"fr\";\n      var country = \"fr\";\n\n      if (selectedLang == \"en\") {\n        var langue = \"en\";\n        var country = \"us\";\n      }\n      props.changeLang(selectedLang);\n      const data = await fetch(\n        `https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=9e56b86b7cc84455afbf9841f80f01f0`\n      );\n      const body = await data.json();\n      setSourceList(body.sources);\n    };\n\n    APIResultsLoading();\n  }, [selectedLang]);\n\n  return (\n    <div>\n      <Nav />\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"Banner\"\n      >\n        <img\n          style={{ width: \"40px\", margin: \"10px\", cursor: \"pointer\" }}\n          src=\"/images/fr.png\"\n          onClick={() => setSelectedLang(\"fr\")}\n        />\n        <img\n          style={{ width: \"40px\", margin: \"10px\", cursor: \"pointer\" }}\n          src=\"/images/uk.png\"\n          onClick={() => setSelectedLang(\"en\")}\n        />\n      </div>\n\n      <div className=\"HomeThemes\">\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sourceList}\n          renderItem={(source) => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src={`/images/${source.category}.png`} />}\n                title={\n                  <Link to={`/screenarticlesbysource/${source.id}`}>\n                    {source.name}\n                  </Link>\n                }\n                description={source.description}\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { selectedLang: state.selectedLang };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeLang: function (selectedLang) {\n      dispatch({ type: \"changeLang\", selectedLang: selectedLang });\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenSource);\n"]},"metadata":{},"sourceType":"module"}